// Generated by CodiumAI

import { SAP_ROW_CONSTANTS } from '../../../entities/sap-transformer/excel/sap-row.constants';
import { SAPExcelRow } from '../../../entities/sap-transformer/excel/sap-row.entity';
import { ExcelDateInvalidFormatException } from '../exceptions/excel-date-invalid-format.exception';
import { ExcelEnvVariablesMissingException } from '../exceptions/excel-env-variables-missing.exception';

describe('SAPExcelRow', () => {
  // Constructor creates a new instance of SAPExcelRow with valid input parameters
  beforeEach(() => {
    process.env.MANDANTE_VALUE = '12';
  });
  it('should create a new instance of SAPExcelRow with valid input parameters', () => {
    process.env.MANDANTE;
    // Arrange
    const date = '20211231';
    const currencyCode = 'USD';
    const monthPeriodAccount = '202112';
    const amount = 100;
    const accountDescription = 'Account Description';
    const accountName = 'Account Name';

    // Act
    const sapExcelRow = new SAPExcelRow(
      date,
      currencyCode,
      monthPeriodAccount,
      amount,
      accountDescription,
      accountName,
    );

    // Assert
    expect(sapExcelRow.mandante).toBe(process.env.MANDANTE_VALUE!.toString());
    expect(sapExcelRow.interfaz).toBe(SAP_ROW_CONSTANTS.INTERFAZ_DEFAULT_VALUE);
    expect(sapExcelRow.fechaEntrada).toBe(date);
    expect(sapExcelRow.numero).toBe(SAP_ROW_CONSTANTS.NUMERO_DEFAULT_VALUE);
    expect(sapExcelRow.claseDeDocto).toBe(SAP_ROW_CONSTANTS.CLASE_DOCTO_DEFAULT_VALUE);
    expect(sapExcelRow.moneda).toBe(currencyCode);
    expect(sapExcelRow.fechaContabilizacion).toBe(date);
    expect(sapExcelRow.fechaDocto).toBe(date);
    expect(sapExcelRow.mesContabilizacion).toBe(monthPeriodAccount);
    expect(sapExcelRow.montoEnMonedaDelDocto).toBe(Math.abs(amount));
    expect(sapExcelRow.textoPosicion).toBe(accountDescription);
    expect(sapExcelRow.referencia1).toBe(accountName);
  });

  // Constructor creates a new instance of SAPExcelRow with minimum valid input parameters
  it('should create a new instance of SAPExcelRow with minimum valid input parameters', () => {
    // Arrange
    const date = '20211231';
    const currencyCode = 'USD';
    const monthPeriodAccount = '202112';
    const amount = 100;
    const accountDescription = '';
    const accountName = '';

    // Act
    const sapExcelRow = new SAPExcelRow(
      date,
      currencyCode,
      monthPeriodAccount,
      amount,
      accountDescription,
      accountName,
    );

    // Assert
    expect(sapExcelRow.mandante).toBe(process.env.MANDANTE_VALUE!.toString());
    expect(sapExcelRow.interfaz).toBe(SAP_ROW_CONSTANTS.INTERFAZ_DEFAULT_VALUE);
    expect(sapExcelRow.fechaEntrada).toBe(date);
    expect(sapExcelRow.numero).toBe(SAP_ROW_CONSTANTS.NUMERO_DEFAULT_VALUE);
    expect(sapExcelRow.claseDeDocto).toBe(SAP_ROW_CONSTANTS.CLASE_DOCTO_DEFAULT_VALUE);
    expect(sapExcelRow.moneda).toBe(currencyCode);
    expect(sapExcelRow.fechaContabilizacion).toBe(date);
    expect(sapExcelRow.fechaDocto).toBe(date);
    expect(sapExcelRow.mesContabilizacion).toBe(monthPeriodAccount);
    expect(sapExcelRow.montoEnMonedaDelDocto).toBe(Math.abs(amount));
    expect(sapExcelRow.textoPosicion).toBe(accountDescription);
    expect(sapExcelRow.referencia1).toBe(accountName);
  });

  // Constructor creates a new instance of SAPExcelRow with invalid date format
  it('should throw ExcelDateInvalidFormatException when date format is invalid', () => {
    // Arrange
    const date = '2021-12-31';
    const currencyCode = 'USD';
    const monthPeriodAccount = '202112';
    const amount = 100;
    const accountDescription = 'Account Description';
    const accountName = 'Account Name';

    // Act & Assert
    expect(
      () => new SAPExcelRow(date, currencyCode, monthPeriodAccount, amount, accountDescription, accountName),
    ).toThrow(ExcelDateInvalidFormatException);
  });

  // Constructor throws ExcelEnvVariablesMissingException when MANDANTE_VALUE is missing
  it('should throw ExcelEnvVariablesMissingException when MANDANTE_VALUE is missing', () => {
    // Arrange
    const date = '20211231';
    const currencyCode = 'USD';
    const monthPeriodAccount = '202112';
    const amount = 100;
    const accountDescription = 'Account Description';
    const accountName = 'Account Name';

    delete process.env.MANDANTE_VALUE;
    expect(
      () => new SAPExcelRow(date, currencyCode, monthPeriodAccount, amount, accountDescription, accountName),
    ).toThrow(ExcelEnvVariablesMissingException);
    process.env.MANDANTE_VALUE = '12';
  });

  // setCorrelativo method sets the correlativo property of SAPExcelRow instance
  it('should set the correlativo property of SAPExcelRow instance when called with a valid correlativo value', () => {
    // Arrange
    const sapExcelRow = new SAPExcelRow('20211231', 'USD', '202112', 100, 'Account Description', 'Account Name');
    const correlativo = 5;

    // Act
    sapExcelRow.setCorrelativo(correlativo);

    // Assert
    expect(sapExcelRow.correlativo).toBe(correlativo);
  });
});
